public class stack {
    private static final int MAX_SIZE = 100;
    private int[] array;
    private int top;

    public stack() {
        array = new int[MAX_SIZE];
        top = -1;
    }

    public void push(int value) {
        if (top < MAX_SIZE - 1) {
            array[++top] = value;
        } else {
            System.out.println("Stack overflow");
        }
    }

    public int pop() {
        if (top >= 0) {
            return array[top--];
        } else {
            System.out.println("Stack underflow");
            return -1; 
        }
    }

    public int peek() {
        if (top >= 0) {
            return array[top];
        } else {
            System.out.println("Stack is empty");
            return -1;
        }
    }

    public boolean isEmpty() {
        return top == -1;
    }
    public static void main(String[] args) {
        stack s = new stack();
    
        System.out.println("Pushing elements onto the stack:");
        for (int i = 0; i < 5; i++) {
            s.push(i);
            System.out.println("Pushed: " + i);
        }
    
        System.out.println("\nPopping elements from the stack:");
        while (!s.isEmpty()) {
            int poppedValue = s.pop();
            System.out.println("Popped: " + poppedValue);
        }
    
        System.out.println("\nAttempting to pop from an empty stack:");
        int poppedValue = s.pop(); 
        
        System.out.println("\nPeeking at the top element of the stack:");
        s.push(10);
        int topValue = s.peek();
        System.out.println("Top element: " + topValue);
    }
    
}
